; -------------------------------------------------------------------
;                           COMMON.MAC
; -------------------------------------------------------------------
; コマンド共通で使える便利サブルーチンを提供するマクロ
; 使いたいマクロを.SEGMENT "LIB"に召喚してからJSRで呼び出す
; -------------------------------------------------------------------

; -------------------------------------------------------------------
;                      バイト値→ASCII値変換
; -------------------------------------------------------------------
; input     : A   = バイト値
; output    : AY  = ASCII値
; -------------------------------------------------------------------
; Aで与えられたバイト値をASCII値AYにする
; Aから先に表示すると良い
; -------------------------------------------------------------------
.macro cm_byt2asc
.local @NIB2ASC
.local @SKP_ADC
CM_BYT2ASC:
  PHA           ; 下位のために保存
  AND #$0F
  JSR @NIB2ASC
  TAY
  PLA
  LSR           ; 右シフトx4で上位を下位に持ってくる
  LSR
  LSR
  LSR
@NIB2ASC:
  ; #$0?をアスキー一文字にする
  ORA #$30
  CMP #$3A
  BCC @SKP_ADC  ; Aが$3Aより小さいか等しければ分岐
  ADC #$06
@SKP_ADC:
  RTS
.endmac

; -------------------------------------------------------------------
;                      回数指定文字出力
; -------------------------------------------------------------------
; input     : A   = ASCII値
;             X   = 回数
; -------------------------------------------------------------------
; Xレジスタで文字数を指定してAレジスタの文字を繰り返し出力する
; -------------------------------------------------------------------
.macro cm_prt_few_chars
CM_PRT_FEW_CHARS:
  PHA
  PHX
  syscall CON_OUT_CHR
  PLX
  PLA
  DEX
  BNE CM_PRT_FEW_CHARS
  RTS
.endmac

; -------------------------------------------------------------------
;                          バイト値出力
; -------------------------------------------------------------------
; input     : A   = バイト値
; -------------------------------------------------------------------
; バイト値をASCII値に変換して出力する
; -------------------------------------------------------------------
.macro cm_prt_byt
CM_PRT_BYT:
  JSR CM_BYT2ASC
  PHY
  JSR CM_PRT_C_CALL
  PLA
CM_PRT_C_CALL:
  syscall CON_OUT_CHR
  RTS
.endmac

; -------------------------------------------------------------------
;                             1文字出力
; -------------------------------------------------------------------
; 引数: chr = 出力する文字
; -------------------------------------------------------------------
; chrで指定された文字を出力する
; -------------------------------------------------------------------
.macro cm_prt_chr chr
.ifndef CM_PRT_C_CALL
  cm_prt_byt
.endif
CM_PRT_CHR:
  LDA #<(chr)
  BRA CM_PRT_C_CALL
.endmac

; -------------------------------------------------------------------
;                               改行出力
; -------------------------------------------------------------------
; -------------------------------------------------------------------
; 改行を出力する
; -------------------------------------------------------------------
.macro cm_prt_lf
.ifndef CM_PRT_C_CALL
  cm_prt_byt
.endif
CM_PRT_LF:
  LDA #$A
  BRA CM_PRT_C_CALL
.endmac

; -------------------------------------------------------------------
;                         スペース付き出力
; -------------------------------------------------------------------
; input     : A   = バイト値
; -------------------------------------------------------------------
; バイト値をASCII値に変換して出力し、その後スペースを出力する
; -------------------------------------------------------------------
.macro cm_prt_byt_s
.ifndef CM_PRT_C_CALL
  cm_prt_byt
.endif
CM_PRT_BYT_S:
  JSR CM_PRT_BYT
CM_PRT_S:
  LDA #' '
  BRA CM_PRT_C_CALL
.endmac
