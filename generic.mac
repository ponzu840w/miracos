; --- マクロ定義 ---

; loadmem16 T1_IRQ_VEC16,T1_IRQ
; メモリに16bit定数をロードする
.macro loadmem16 mem,cons
  LDA #<(cons)
  STA mem
  LDA #>(cons)
  STA mem+1
.endmac

.macro loadmem8l mem,cons
  LDA #<(cons)
  STA mem
.endmac

; regload16 T1_IRQ_VEC
; Aに低位、Xに上位をロードする
.macro loadreg16 cons
  LDA #<(cons)
  LDX #>(cons)
.endmac

; Aに低位、Yに上位をロードする
.macro loadAY16 cons
  LDA #<(cons)
  LDY #>(cons)
.endmac

.macro print  str_p
  loadreg16 str_p
  JSR MON::PRT_STR
.endmac

; AYをメモリに格納する
.macro storeAY16 dst
  STA dst
  STY dst+1
.endmac

; AXをメモリに格納する
.macro storeAX16 dst
  STA dst
  STX dst+1
.endmac

.macro mem2mem16 dst,src
  LDA src
  STA dst
  LDA src+1
  STA dst+1
.endmac

.macro mem2AY16 src
  LDA src
  LDY src+1
.endmac

.macro mem2AX16 src
  LDA src
  LDX src+1
.endmac

.macro pushAY16
  PHA
  PHY
.endmac

.macro pullAY16
  PLY
  PLA
.endmac

.macro pushAX16
  PHA
  PHX
.endmac

.macro pullAX16
  PLX
  PLA
.endmac

.macro pushmem16 src
  LDA src
  PHA
  LDA src+1
  PHA
.endmac

.macro pullmem16 src
  PLA
  STA src+1
  PLA
  STA src
.endmac

.macro inc16 src
.local @skp
  INC src
  BNE @skp
  INC src+1
@skp:
.endmac

.macro dec16 src
.local @skp
  DEC src
  LDA src
  CMP #$FF
  BNE @skp
  DEC src+1
@skp:
.endmac

.macro mem2mem32 dst,src
  LDA src
  STA dst
  LDA src+1
  STA dst+1
  LDA src+2
  STA dst+2
  LDA src+3
  STA dst+3
.endmac
